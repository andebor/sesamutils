# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - master

pr: none

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install twine
    pip install setuptools
    pip install wheel
  displayName: 'Install dependencies'

#- script: |
#    pip install pytest pytest-azurepipelines
#    pytest
#  displayName: 'pytest'

- script: 'python setup.py bdist_wheel'
  displayName: 'Build package'

- task: TwineAuthenticate@0
  displayName: 'Authenticate Twine'
  inputs:
    externalFeeds: PyPi

- script: 'cat $(PYPIRC_PATH)'
  displayName: Log twine config content
  
- script: 'twine upload -r sesamutils --config-file $(PYPIRC_PATH) dist/*'
  displayName: Upload to PyPi
